{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Footer","to","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","status","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64a0b233.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color }}\r\n      className='btn'\r\n    >\r\n      {text}\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n  const location = useLocation()\r\n\r\n  return (\r\n    <header className='header'>\r\n      <h1>{title}</h1>\r\n      {location.pathname === '/' && (\r\n        <Button\r\n          color={showAdd ? 'red' : 'green'}\r\n          text={showAdd ? 'Close' : 'Add'}\r\n          onClick={onAdd}\r\n        />\r\n      )}\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\n// CSS in JS\r\n// const headingStyle = {\r\n//   color: 'red',\r\n//   backgroundColor: 'black',\r\n// }\r\n\r\nexport default Header\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p>Copyright &copy; 2021</p>\r\n      <Link to='/about'>About</Link>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder && 'reminder'}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}{' '}\r\n        <FaTimes\r\n          style={{ color: 'red', cursor: 'pointer' }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task, index) => (\r\n        <Task key={index} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState('')\r\n  const [day, setDay] = useState('')\r\n  const [reminder, setReminder] = useState(false)\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!text) {\r\n      alert('Please add a task')\r\n      return\r\n    }\r\n\r\n    onAdd({ text, day, reminder })\r\n\r\n    setText('')\r\n    setDay('')\r\n    setReminder(false)\r\n  }\r\n\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className='form-control'>\r\n        <label>Task</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Task'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>Day & Time</label>\r\n        <input\r\n          type='date'\r\n          placeholder='Add Day & Time'\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control form-control-check'>\r\n        <label>Set Reminder</label>\r\n        <input\r\n          type='checkbox'\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n\r\n      <input type='submit' value='Save Task' className='btn btn-block' />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddTask\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h4>Version 1.0.0</h4>\r\n      <Link to='/'>Go Back</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import { useState, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport Tasks from './components/Tasks'\r\nimport AddTask from './components/AddTask'\r\nimport About from './components/About'\r\n\r\nconst App = () => {\r\n  const [showAddTask, setShowAddTask] = useState(false)\r\n  const [tasks, setTasks] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getTasks = async () => {\r\n      const tasksFromServer = await fetchTasks()\r\n      setTasks(tasksFromServer)\r\n    }\r\n\r\n    getTasks()\r\n  }, [])\r\n\r\n  // Fetch Tasks\r\n  const fetchTasks = async () => {\r\n    const res = await fetch('http://json.74code.com/tasks')\r\n    const data = await res.json()\r\n\r\n    return data\r\n  }\r\n\r\n  // Fetch Task\r\n  const fetchTask = async (id) => {\r\n    const res = await fetch(`http://json.74code.com/tasks/${id}`)\r\n    const data = await res.json()\r\n\r\n    return data\r\n  }\r\n\r\n  // Add Task\r\n  const addTask = async (task) => {\r\n    const res = await fetch('http://json.74code.com/tasks', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(task),\r\n    })\r\n\r\n    const data = await res.json()\r\n\r\n    setTasks([...tasks, data])\r\n\r\n    // const id = Math.floor(Math.random() * 10000) + 1\r\n    // const newTask = { id, ...task }\r\n    // setTasks([...tasks, newTask])\r\n  }\r\n\r\n  // Delete Task\r\n  const deleteTask = async (id) => {\r\n    const res = await fetch(`http://json.74code.com/tasks/${id}`, {\r\n      method: 'DELETE',\r\n    })\r\n    //We should control the response status to decide if we will change the state or not.\r\n    res.status === 200\r\n      ? setTasks(tasks.filter((task) => task.id !== id))\r\n      : alert('Error Deleting This Task')\r\n  }\r\n\r\n  // Toggle Reminder\r\n  const toggleReminder = async (id) => {\r\n    const taskToToggle = await fetchTask(id)\r\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\r\n\r\n    const res = await fetch(`http://json.74code.com/tasks/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(updTask),\r\n    })\r\n\r\n    const data = await res.json()\r\n\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === id ? { ...task, reminder: data.reminder } : task\r\n      )\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div className='container'>\r\n        <Header\r\n          onAdd={() => setShowAddTask(!showAddTask)}\r\n          showAdd={showAddTask}\r\n        />\r\n        <Route\r\n          path='/'\r\n          exact\r\n          render={(props) => (\r\n            <>\r\n              {showAddTask && <AddTask onAdd={addTask} />}\r\n              {tasks.length > 0 ? (\r\n                <Tasks\r\n                  tasks={tasks}\r\n                  onDelete={deleteTask}\r\n                  onToggle={toggleReminder}\r\n                />\r\n              ) : (\r\n                'No Tasks To Show'\r\n              )}\r\n            </>\r\n          )}\r\n        />\r\n        <Route path='/about' component={About} />\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}